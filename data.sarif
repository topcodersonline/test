{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"rules": [{"properties": {"tags": ["security"]}, "name": "BetterscanRule", "fullDescription": {"text": "Default session middleware settings: `sameSite` attribute is not configured to strict or lax. These configurations provides protection against Cross Site Request Forgery attacks."}, "defaultConfiguration": {"level": "warning"}, "shortDescription": {"text": "Default session middleware settings: `sameSite` attribute is not configured to strict or lax. These configurations provides protection against Cross Site Request Forgery attacks."}, "id": "0", "helpUri": "https://betterscan.io", "help": {"text": "", "markdown": "Default session middleware settings: `sameSite` attribute is not configured to strict or lax. These configurations provides protection against Cross Site Request Forgery attacks."}}, {"properties": {"tags": ["security"]}, "name": "BetterscanRule", "fullDescription": {"text": "Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next."}, "defaultConfiguration": {"level": "warning"}, "shortDescription": {"text": "Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next."}, "id": "1", "helpUri": "https://betterscan.io", "help": {"text": "", "markdown": "Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next."}}, {"properties": {"tags": ["security"]}, "name": "BetterscanRule", "fullDescription": {"text": "Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS."}, "defaultConfiguration": {"level": "warning"}, "shortDescription": {"text": "Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS."}, "id": "2", "helpUri": "https://betterscan.io", "help": {"text": "", "markdown": "Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS."}}, {"properties": {"tags": ["security"]}, "name": "BetterscanRule", "fullDescription": {"text": "Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request."}, "defaultConfiguration": {"level": "warning"}, "shortDescription": {"text": "Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request."}, "id": "3", "helpUri": "https://betterscan.io", "help": {"text": "", "markdown": "Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request."}}, {"properties": {"tags": ["security"]}, "name": "BetterscanRule", "fullDescription": {"text": "Consider changing the default session cookie name. An attacker can use it to fingerprint the server and target attacks accordingly."}, "defaultConfiguration": {"level": "warning"}, "shortDescription": {"text": "Consider changing the default session cookie name. An attacker can use it to fingerprint the server and target attacks accordingly."}, "id": "4", "helpUri": "https://betterscan.io", "help": {"text": "", "markdown": "Consider changing the default session cookie name. An attacker can use it to fingerprint the server and target attacks accordingly."}}, {"properties": {"tags": ["security"]}, "name": "BetterscanRule", "fullDescription": {"text": "Untrusted user input in express render() function can result in arbitrary file read if hbs templating is used."}, "defaultConfiguration": {"level": "warning"}, "shortDescription": {"text": "Untrusted user input in express render() function can result in arbitrary file read if hbs templating is used."}, "id": "5", "helpUri": "https://betterscan.io", "help": {"text": "", "markdown": "Untrusted user input in express render() function can result in arbitrary file read if hbs templating is used."}}, {"properties": {"tags": ["security"]}, "name": "BetterscanRule", "fullDescription": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "defaultConfiguration": {"level": "warning"}, "shortDescription": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "id": "6", "helpUri": "https://betterscan.io", "help": {"text": "", "markdown": "Ensure that HEALTHCHECK instructions have been added to container images"}}, {"properties": {"tags": ["security"]}, "name": "BetterscanRule", "fullDescription": {"text": "Ensure the base image uses a non latest version tag"}, "defaultConfiguration": {"level": "warning"}, "shortDescription": {"text": "Ensure the base image uses a non latest version tag"}, "id": "7", "helpUri": "https://betterscan.io", "help": {"text": "", "markdown": "Ensure the base image uses a non latest version tag"}}], "name": "Betterscan", "informationUri": "https://betterscan.io", "semanticVersion": "0.9.9"}}, "results": [{"message": {"text": "Default session middleware settings: `sameSite` attribute is not configured to strict or lax. These configurations provides protection against Cross Site Request Forgery attacks."}, "locations": [{"physicalLocation": {"region": {"startLine": 1}, "artifactLocation": {"uri": "file"}}}], "ruleId": "0"}, {"message": {"text": "Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next."}, "locations": [{"physicalLocation": {"region": {"startLine": 1}, "artifactLocation": {"uri": "file"}}}], "ruleId": "1"}, {"message": {"text": "Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS."}, "locations": [{"physicalLocation": {"region": {"startLine": 1}, "artifactLocation": {"uri": "file"}}}], "ruleId": "2"}, {"message": {"text": "Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request."}, "locations": [{"physicalLocation": {"region": {"startLine": 1}, "artifactLocation": {"uri": "file"}}}], "ruleId": "3"}, {"message": {"text": "Consider changing the default session cookie name. An attacker can use it to fingerprint the server and target attacks accordingly."}, "locations": [{"physicalLocation": {"region": {"startLine": 1}, "artifactLocation": {"uri": "file"}}}], "ruleId": "4"}, {"message": {"text": "Untrusted user input in express render() function can result in arbitrary file read if hbs templating is used."}, "locations": [{"physicalLocation": {"region": {"startLine": 1}, "artifactLocation": {"uri": "file"}}}], "ruleId": "5"}, {"message": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "locations": [{"physicalLocation": {"region": {"startLine": 1}, "artifactLocation": {"uri": "file"}}}], "ruleId": "6"}, {"message": {"text": "Ensure the base image uses a non latest version tag"}, "locations": [{"physicalLocation": {"region": {"startLine": 1}, "artifactLocation": {"uri": "file"}}}], "ruleId": "7"}]}]}